variables:
  NODE_VERSION: "12"
  FOO: "initial foo"
  BAR: "initial bar"
  BAZ: "initial baz"

image: node:lts-alpine3.12

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  #untracked: true
  policy: pull
  paths:
    - node_modules

stages:
  - pre-prepare
  - prepare
  - test
  # - build
  # - deploy
  # - schedule

include:
  - local: "/ci/prepare.yml"
  # - local: '/ci/test.yml'
  # - local: '/ci/schedule.yml'
  # - local: '/ci/build.yml'
  # - local: '/ci/deploy.yml'

.example-template:
  image:
    name: alpine
  before_script:
    - "echo 'Example template before...'"
  variables:
    FOO: "foo"
    BAR: "bar"

.other-template:
  before_script:
    - "echo 'Other template before...'"
  after_script:
    - "echo 'Other template after...'"
  variables:
    FOO: "overriden foo"

job-extends:
  extends:
    - .example-template
    - .other-template
  before_script:
    - "echo 'Job before...'"
  script: echo "Hello World"
  variables:
    BAR: "overriden bar"
    BAZ: "baz"

private-image-job:
  image: maximedubourg/glci-private-repo:latest
  script:
    - date

pre:
  stage: pre-prepare
  cache:
    #<<: *global_cache
    policy: pull-push
    untracked: true
  before_script:
    - whoami
  script:
    - mkdir -p node_modules/lodash
    - touch node_modules/lodash/index.js
    - touch foo.txt
    - mkdir -p bar && touch bar/bar.txt
  artifacts:
    untracked: true
    paths:
     - package.json

pre-test:
  stage: prepare
  script:
    - touch pretestfile.txt
  artifacts:
    paths:
      - pretestfile.txt

test:cacheworks:
  stage: test
  script:
    - ls -lA node_modules/lodash/*
    - test -f foo.txt && echo "foo.txt exists."
    - test -f bar/bar.txt && echo "foo.txt exists."
  dependencies:
    - pre

test:artifactswork:
  stage: test
  script:
    - test -f foo.txt && echo "foo.txt exists."
    - test -f bar/bar.txt && echo "foo.txt exists."
    - test -f pretestfile.txt && echo "pretestfile.txt exists."

test:unit:
  stage: test
  before_script:
    - echo "Yay before script !"
  script:
    - ls node_modules
  after_script:
    - echo "Yay after script !"
  dependencies:
    - install

failingjob:
  stage: test
  script:
    - echo 1
    - echo 2
    - node -e "process.exit(1);"
    - echo 3
